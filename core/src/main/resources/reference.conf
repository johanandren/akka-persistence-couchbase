couchbase-journal {
  # connection settings shared by write, read and snapshot
  connection {
    # The couchbase nodes to connect to as hostnames of ip-addresses
    nodes = ["localhost"]
    # credentials are required fields with no defauls:
    # username = "admin"
    # password = "admin1"
  }

  write {
    # The plugin-dispatcher is the dispatcher used for the plugin actor.
    # If not specified, it defaults to akka.persistence.dispatchers.default-plugin-dispatcher.
    #
    # Don't run snapshot store tasks/futures on the system default dispatcher, since that might starve other tasks.
    plugin-dispatcher = "akka.actor.default-dispatcher"
    class = "akka.persistence.couchbase.CouchbaseJournal"

    # What coucbase bucket to use for the events, also read by the read journal.
    # The bucket and required indexes needs to be created up front.
    bucket = "akka"

    # How many operations couchbase can perform in parallell in response to a request/query
    # FIXME I wonder if we shouldn't decide this internally instead. depending on how many documents we insert?
    parallelism = 1

    # How many nodes a write is replicated to before considering the write completed.
    #
    # Valid values:
    # * none - No replication needed to consider a write done
    # * one - Write replicated to at least one replica
    # * two - Write replicated to at least two replicas
    # * three - Write replicated to at least three replicas
    replicate-to = none

    # How many nodes a write has reached disk on before it is considered complete.
    #
    # Valid values:
    # * none - Write reaching memory is enough
    # * master - Ensure the modification is stored on disk on the master node
    # * one - Ensure the modification is stored on disk on at least one node
    # * two - Ensure the modification is stored on disk on at least two nodes
    # * three- Ensure the modification is stored on disk on at least three nodes
    # * four - Ensure the modification is stored on disk on the active node and all three replicas
    persist-to = one

    # Fail a write to couchbase if it takes longer than this
    write-timeout = 15 s

    # Fail a read from couchbase if it takes longer than this
    read-timeout = 15 s


    # Page size for replays, higher values means individual replays may be a bit faster but
    # other replays may suffer since each single replay is allowed to use one connection to Couchbase
    # for a longer while.
    replay-page-size = 100

    # Log a warning if the required indexes are missing
    warn-about-missing-indexes = true
  }

  read {
    # The plugin-dispatcher is the dispatcher used for the plugin actor.
    #
    # Don't run persistence tasks/futures on the system default dispatcher, since that might starve other tasks.
    plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
    class = "akka.persistence.couchbase.CouchbaseReadJournalProvider"

    # Maximum number of documents to fetch from couchbase in one query.
    # Setting this to a large value will be at the cost of fairness - one of the couchbase client connections
    # will be occupied until this number of events has been fetched
    page-size = 100

    # Smallest interval to re-query Couchbase to find new events or persistence ids when using the
    # live variations of the queries. Lower values will make changes appear faster but will cause more
    # load on the database.
    live-query-interval = 1s

    # Log a warning if the required indexes are missing
    warn-about-missing-indexes = true

    events-by-tag {
      # For eventsByTag queries how long to delay the query for. For event writes that come from different nodes
      # the clocks may be out of sync meaning events aren't received in order. If the events are delivered to the
      # query immediately the offset may be greater than some delayed events. Meaning that if this offset is saved
      # for restarting the query the delayed events will never be processed.
      # IMPORTANT: if this is tuned too low it may lead to events being missed in the queries and any projections
      # based on it being based on incomplete data
      eventual-consistency-delay = 5s

    }
    events-by-persistenceid {
    }
  }

  snapshot {
    class = "akka.persistence.couchbase.CouchbaseSnapshotStore"
    bucket = "akka"
  }

}
